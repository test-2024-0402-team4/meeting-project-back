<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meeteam4.meeting.repository.AccountMapper">
    <resultMap id="StudentResultMap" type="com.meeteam4.meeting.entity.Student">
        <id property="studentId" column="student_id"/>
        <result property="username" column="username"/>
        <result property="nickname" column="nickname"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="birthDate" column="birth_date"/>
        <result property="genderId" column="gender_id"/>
        <result property="roleId" column="role_id"/>
        <result property="studentTypeId" column="student_type_id"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="regionId" column="region_id"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>
    <select id="findStudentByStudentId" resultMap="StudentResultMap">
        select
            st.nickname,
            st.email,
            gt.gender_type,
            rt.role_name,
            stt.student_type,
            rgt.region_name
        from
            student_tb st
            left outer join gender_tb gt on (gt.gender_id = st.gender_id)
            left outer join role_tb rt on (rt.role_id = st.role_id)
            left outer join student_type_tb stt on (stt.student_type_id = st.student_type_id)
            left outer join region_tb rgt on (rgt.region_id = st.region_id)
        where
            student_id = #{studentId};
    </select>
</mapper>