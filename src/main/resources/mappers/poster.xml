<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meeteam4.meeting.repository.AccountMapper">
    <insert id="saveStudentPoster"
            parameterType="com.meeteam4.meeting.entity.Poster"
            keyProperty="posterId"
            useGeneratedKeys="true">
        insert into
            poster_tb
        values
        (
            0,
            #{userId},
            #{title},
            #{genderId},
            #{studentTypeId},
            #{regionId},
            #{content},
            now(),
            now()
        )

    </insert>
    <insert id="savePosterDate">
        insert into
            poster_date_register_tb
        values
        <foreach collection="dateIds" item="dateId" separator="," >
            (0, #{posterId} ,#{dateId})
        </foreach>
    </insert>
    <insert id="savePosterSubjectIds">
        insert into
            poster_subject_register_tb
        values
        <foreach collection="subjectIds" item="subjectId" separator="," >
            (0, #{posterId}, #{subjectId})
        </foreach>
    </insert>
    <insert id="savePosterClassTypeIds">
        insert into
            poster_class_type_id_register_tb
        values
        <foreach collection="classTypeIds" item="classTypeId" separator=",">
            (0, #{posterId}, #{classTypeId})
        </foreach>
    </insert>
    <select id="searchPosterIds" resultType="integer">
        select
            pt.poster_id
        from
            poster_tb pt
            left outer join poster_subject_register_tb psrt on(psrt.poster_id = pt.poster_id)
            left outer join poster_date_register_tb pdrt on(pdrt.poster_id = pt.poster_id)
            left outer join poster_class_type_id_register_tb pctirt on(pctirt.poster_id = pt.poster_id)
        where
            1=1
            <!-- regionIds -->
            <if test="regionId != null and regionId != 0">
                and pt.region_id in
                    ( #{regionId} )
            </if>
            <!-- subjectIds -->
            <if test="subjectIds != null and subjectIds.size() > 0">
                and psrt.subject_id in (
                <foreach collection="subjectIds" item="subjectId" separator=",">
                    #{subjectId}
                </foreach>
                )
            </if>
            <!-- dateIds -->
            <if test="dateIds != null and dateIds.size() > 0">
                and pdrt.date_id in (
                <foreach collection="dateIds" item="dateId" separator=",">
                    #{dateId}
                </foreach>
                )
            </if>
            <!-- classTypeIds -->
            <if test="classTypeIds != null and classTypeIds.size() > 0">
                and pctirt.class_type_id in (
                <foreach collection="classTypeIds" item="classTypeId" separator=",">
                    #{classTypeId}
                </foreach>
                )
            </if>
        group by
            pt.poster_id

    </select>
    <select id="getPosters" resultType="com.meeteam4.meeting.entity.Poster">
        select
            *
        from
            poster_tb pt
            left outer join poster_subject_register_tb psrt on(psrt.poster_id = pt.poster_id)
            left outer join subject_tb st on(st.subject_id = psrt.subject_id)
            left outer join poster_date_register_tb pdrt on(pdrt.poster_id = pt.poster_id)
            left outer join date_tb dt on(dt.date_id = pdrt.date_id)
            left outer join poster_class_type_id_register_tb pctirt on(pctirt.poster_id = pt.poster_id)
            left outer join class_type_tb ctt on(ctt.class_type_id = pctirt.class_type_id)
        where
            pt.poster_id(
                <foreach collection="posterIds" item="posterId" separator=",">
                    #{posterId}
                </foreach>
            )
        order by
            dt.date_id asc;
    </select>


</mapper>