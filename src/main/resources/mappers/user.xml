<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meeteam4.meeting.repository.UserMapper">

    <resultMap id="UserResultMap" type="com.meeteam4.meeting.entity.User">
        <id property="userId" column="user_id" />
        <result property="name" column="name" />
        <result property="username" column="username" />
        <result property="password" column="password" />
        <result property="nickname" column="nickname" />
        <result property="email" column="email" />
        <result property="roleId" column="role_id" />
    </resultMap>

    <insert id="saveUser"
            parameterType="com.meeteam4.meeting.entity.User"
            keyProperty="userId"
            useGeneratedKeys="true"
    >
        insert into
            user_tb
        values
            (0, #{name}, #{username}, #{password}, #{nickname}, #{email}, #{roleId}, now(), now());
    </insert>

    <insert id="saveStudent"
            parameterType="com.meeteam4.meeting.entity.Student"
            keyProperty="studentId"
            useGeneratedKeys="true"
    >
        insert into
            student_tb
        values
            (0, #{userId}, #{birthDate}, #{genderId}, #{studentTypeId}, #{phoneNumber}, #{regionId}, now(), now());
    </insert>

    <insert id="saveTeacher"
            parameterType="com.meeteam4.meeting.entity.Teacher"
            keyProperty="teacherId"
            useGeneratedKeys="true"
    >
        insert into
            teacher_tb
        values
            (0, #{userId}, #{birthDate}, #{genderId}, #{universityId}, #{departmentName}, #{graduateStateId}, #{phoneNumber}, now(), now());
    </insert>



    <select id="findByUsername"
            parameterType="String"
            resultMap="UserResultMap"
    >
        select
            *
        from
            user_tb ut
            left outer join student_tb st on(st.user_id = ut.user_id)
            left outer join teacher_tb tt on(tt.user_id = ut.user_id)
        where
            username = #{username}
    </select>

    <select id="findByNickname"
            parameterType="String"
            resultMap="UserResultMap"
    >
        select
            *
        from
            user_tb ut
            left outer join student_tb st on(st.user_id = ut.user_id)
            left outer join teacher_tb tt on(tt.user_id = ut.user_id)
        where
            nickname = #{nickname}
    </select>

    <select id="findByEmail"
            parameterType="String"
            resultMap="UserResultMap"
    >
        select
            *
        from
            user_tb ut
            left outer join student_tb st on(st.user_id = ut.user_id)
            left outer join teacher_tb tt on(tt.user_id = ut.user_id)
        where
            email = #{email}
    </select>

</mapper>